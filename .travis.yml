language: cpp
os: linux
dist: trusty
sudo: false
env:
  global:
  - BOOST_VERSION="1.67.0"
  - LIBRARIES="--without-icu --with-libraries=chrono,log,program_options,date_time,thread,system,filesystem,regex,test"
  - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
matrix:
  include:
  - env: COMPILER=g++-4.9
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.9
  - env: COMPILER=clang++-3.6
    addons:
      apt:
        packages:
        - clang-3.6
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-3.6
  - env: COMPILER=g++-5
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-5
  - env: COMPILER=g++-6
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-6
  - env: COMPILER=g++-7
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-7
  - env: COMPILER=clang++-3.8
    addons:
      apt:
        packages:
        - clang-3.8
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-3.8
  - env: COMPILER=clang++-3.9
    addons:
      apt:
        packages:
        - clang-3.9
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-3.9
  - env: COMPILER=clang++-4.0
    addons:
      apt:
        packages:
        - clang-4.0
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-4.0
  - env: COMPILER=clang++-5.0
    addons:
      apt:
        packages:
        - clang-5.0
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-5.0
  - env: COMPILER=clang++-6.0
    addons:
      apt:
        packages:
        - clang-6.0
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-6.0
install:
- mkdir -p ${DEPS_DIR}
- if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi
- "${CXX} --version"
- |
  if [[ "${CXX%%+*}" == "clang" ]]; then

    if   [[ "${CXX}" == "clang++-3.5" ]]; then LLVM_VERSION="3.5.2";
    elif [[ "${CXX}" == "clang++-3.6" ]]; then LLVM_VERSION="3.6.2";
    elif [[ "${CXX}" == "clang++-3.7" ]]; then LLVM_VERSION="3.7.1";
    elif [[ "${CXX}" == "clang++-3.8" ]]; then LLVM_VERSION="3.8.1";
    elif [[ "${CXX}" == "clang++-3.9" ]]; then LLVM_VERSION="3.9.1";
    elif [[ "${CXX}" == "clang++-4.0" ]]; then LLVM_VERSION="4.0.1";
    elif [[ "${CXX}" == "clang++-5.0" ]]; then LLVM_VERSION="5.0.1";
    elif [[ "${CXX}" == "clang++-6.0" ]]; then LLVM_VERSION="6.0.0";
    fi

    LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
    LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
    LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"

    cd ${DEPS_DIR} && mkdir -p llvm llvm/build llvm/projects/libcxx llvm/projects/libcxxabi
    travis_retry wget -O - ${LLVM_URL} | tar --strip-components=1 -xJ -C llvm || exit 1
    travis_retry wget -O - ${LIBCXX_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxx || exit 1
    travis_retry wget -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxxabi || exit 1

    cmake -E chdir llvm/build cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${DEPS_DIR}/llvm/install || exit 1
    cmake --build ${DEPS_DIR}/llvm/build/projects/libcxx --target install -- -j2
    cmake --build ${DEPS_DIR}/llvm/build/projects/libcxxabi --target install -- -j2

    VERSION="${CXX##*-}"
    DEPLOY_FILE="libcxx-for-clang-${VERSION//\./_}.7z"
    cmake -E chdir ${DEPS_DIR} cmake -E tar cf $DEPLOY_FILE --format=7zip llvm/install
    mkdir -p ${TRAVIS_BUILD_DIR}/deploy
    cp ${DEPS_DIR}/$DEPLOY_FILE ${TRAVIS_BUILD_DIR}/deploy
  fi
before_script:
- |
  BOOST_URL="https://dl.bintray.com/boostorg/release/${BOOST_VERSION}/source/boost_${BOOST_VERSION//\./_}.tar.gz"

  # create dirs for source and install
  mkdir -p ${TRAVIS_BUILD_DIR}/boost${BOOST_VERSION} ${TRAVIS_BUILD_DIR}/boost
  travis_retry wget --no-check-certificate --quiet -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${TRAVIS_BUILD_DIR}/boost${BOOST_VERSION}

  if [[ "${CXX%%+*}" == "clang" ]]; then
    export TOOLSET=clang
    cp ${TRAVIS_BUILD_DIR}/clang-user-config.jam ~/user-config.jam
  else
    export TOOLSET=gcc
    cp ${TRAVIS_BUILD_DIR}/gcc-user-config.jam ~/user-config.jam
  fi
  cmake -E chdir ${TRAVIS_BUILD_DIR}/boost${BOOST_VERSION} ./bootstrap.sh --prefix=${TRAVIS_BUILD_DIR}/boost/ --with-toolset=${TOOLSET} ${LIBRARIES}
script:
- travis_wait cmake -E chdir ${TRAVIS_BUILD_DIR}/boost${BOOST_VERSION} ./b2 toolset=${TOOLSET} -d0 threading=multi threadapi=pthread variant=release --prefix=${TRAVIS_BUILD_DIR}/boost/ install
- |
  COMP="${CXX%%+*}"
  if [[ "${COMP}" == "g" ]]; then
    COMP="gcc"
  fi
  VERSION="${CXX##*-}"
  DEPLOY_FILE="boost-${BOOST_VERSION//\./_}-${COMP}-${VERSION//\./_}.7z"
  cmake -E chdir ${TRAVIS_BUILD_DIR} cmake -E tar cf ${DEPLOY_FILE} --format=7zip boost
  mkdir -p ${TRAVIS_BUILD_DIR}/deploy
  cmake -E copy ${TRAVIS_BUILD_DIR}/$DEPLOY_FILE ${TRAVIS_BUILD_DIR}/deploy
- cd ${TRAVIS_BUILD_DIR} && ls ${TRAVIS_BUILD_DIR}/deploy/
deploy:
  provider: releases
  api_key:
    secure: F+l0z9+oTk+ryi5iKtia0Ctt0XA8HGZWtOu1qhhydXsXraADGV0v7SdQC6rkGup2GplzGUNXcf3qhcRNM5yOsOlwdyG0Ga7UtIMLpaZ13hJEyKPsi4xd4BF+0z55mq6PEkrFZJZw8kJekeOW7Z1biE8Y4upevKWWClAFkD6TXKn928L+bLlsg8MvtShE5HZrDgX7HV7SuIQ9c4pIG9Sgxt8dHUASukbQYwxkviL+k8HfHD/bUxFmnSlPRMUHKuwklsXX6OcB/355tCPIrjy2nVaQIoOdad2hfHgLRjW1jVK0xZ6IdE7lTceTY/pn2DXmu3AJH63Xt6ck3nd1bG0Peay+8qK3Boui4bSIiuYYm8cWP23M1cxs1ynFmG5V1xKzFC49aQm9d+iLtWMqItYa3E/NQIn5wha4HWArVnfGxJzuIFqClnkWSq/t49t4gVRWIC6EsXC6g1r/cFLZwNICIbxo0qPkvdo0/kE1K+kaAaa3LxBGxtgbNvbCCg1fE1fwopOpAC6N3CV28S9ty5UaJTblqHyS7nFkKPWa+kJPutO/aK/uE/4MsR6udIRHUJKyMPvQGSqUdwdBcUqkckraCaQW9S0qO9vB+qEl+SMM6HWNBmyB+W/WTMGjZD5KJPx+orLZ7r0ZLZHY3dkMTkHewhoAuqjOZ7DUr03EaT/UY4c=
  file_glob: true 
  file: deploy/**
  skip_cleanup: true 
  on:
    tags: true
